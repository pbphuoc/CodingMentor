package day6;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Scanner;

public class BookStoreService {
	DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
	Scanner scanner = new Scanner(System.in);

	public String getBorrowStatus(BorrowReturnHistory borrowReturnHistory) {
		LocalDate todayDate = LocalDate.parse(LocalDate.now().toString(), formatter);
		LocalDate expectedReturnDate = LocalDate.parse(borrowReturnHistory.getExpectedReturnDate(), formatter);

		if (borrowReturnHistory.getActualReturnDate().equalsIgnoreCase("")) {
			if (todayDate.isAfter(expectedReturnDate))
				return "Overdue";
			else
				return "Borrowed";
		} else {
			LocalDate actualReturnDate = LocalDate.parse(borrowReturnHistory.getActualReturnDate(), formatter);
			if (actualReturnDate.isAfter(expectedReturnDate))
				return "Late Return";
			else
				return "Returned";
		}
	}

	public ArrayList<BorrowReturnHistory> getBorrowListByCustomerID(
			ArrayList<BorrowReturnHistory> borrowRefurnHistories, String customerID) {
		ArrayList<BorrowReturnHistory> records = new ArrayList<BorrowReturnHistory>();
		for (BorrowReturnHistory record : borrowRefurnHistories) {
			if (record.getCustomerID().equalsIgnoreCase(customerID))
				records.add(record);
		}
		return records;
	}

	public void showBorrowList(ArrayList<BorrowReturnHistory> borrowReturnHistories) {
		for(BorrowReturnHistory history: borrowReturnHistories) {
			
		}
	}
	
	public Customer getCustomerByID(ArrayList<Customer> customers, String customerID) {
		for(Customer customer : customers) {
			if (customerID.equalsIgnoreCase(customer.getCustomerID()))
				return customer;
		}
		return null;
	}
}
